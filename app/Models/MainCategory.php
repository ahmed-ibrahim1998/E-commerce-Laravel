<?php

namespace App\Models;

use App\Observers\mainCategoryobserver;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class MainCategory extends Model
{
    use HasFactory;

    protected $table = 'main_categories';

    protected $fillable = [
        'translation_lang', 'translation_of','name','slug','photo','active','created_at', 'updated_at',
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        MainCategory::observe(mainCategoryobserver::class);
    }

    public function scopeActive($query) {

        return $query->where('active',1);
    }
    public function scopeSelection($query)
    {

        return $query -> select('id','translation_lang','name', 'slug', 'photo', 'active','translation_of');
    }

    public function getPhotoAttribute($vale) {

        return ($vale !== null) ? asset('assets/'.$vale) : "";

    }

    public function getActive()
    {
        return $this->active == 1 ? 'مفعل' : 'غير مفعل';
    }

    // get all translation category
    public function categories() {
        return $this-> hasMany(self::class,'translation_of');
    }

    // get all subcategory

    public  function subCategories(){
        return $this -> hasMany('App\Models\SubCategory','category_id','id');
    }


    public function vendors() {

        return $this ->hasMany('App\Models\Vendor','category_id','id');
    }

    public function scopeDefaultCategory($query) {
        return $query->where('translation_of',0);
    }
}

